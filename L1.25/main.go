package main

import (
	"fmt"
	"time"
)

// Своя функция Sleep

// Реализовать собственную функцию sleep(duration) аналогично встроенной функции time.Sleep,
//  которая приостанавливает выполнение текущей горутины.

// Важно: в отличие от настоящей time.Sleep, ваша функция должна именно блокировать выполнение
// (например, через таймер или цикл), а не просто вызывать time.Sleep :) — это упражнение.

// Можно использовать канал + горутину, или цикл на проверку времени (не лучший способ, но для обучения).

func main() {
	fmt.Println("sleep start")

	sleep(2 * time.Second)

	fmt.Println("sleep end")
}

// Приостанавливает выполнение текущей горутины на переданное время
func sleep(d time.Duration) {
	// Блокируем горутину, пока time.After не вернет канал
	// спустя переданное в функцию время
	<-time.After(d)
}
